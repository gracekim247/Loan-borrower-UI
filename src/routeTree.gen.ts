/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SigninRouteImport } from './routes/signin'
import { Route as AuthedRouteImport } from './routes/_authed'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthedVerifyEmailRouteImport } from './routes/_authed/verify-email'
import { Route as AuthedAcceptInvitationRouteImport } from './routes/_authed/accept-invitation'
import { Route as AuthedMainLayoutRouteImport } from './routes/_authed/_mainLayout'
import { Route as AuthedMainLayoutDashboardRouteImport } from './routes/_authed/_mainLayout/dashboard'
import { Route as AuthedMainLayoutUploadIndexRouteImport } from './routes/_authed/_mainLayout/upload/index'
import { Route as AuthedMainLayoutUploadSubmitRouteImport } from './routes/_authed/_mainLayout/upload/submit'
import { Route as AuthedMainLayoutUploadReviewRouteImport } from './routes/_authed/_mainLayout/upload/review'
import { Route as AuthedMainLayoutUploadConfirmationRouteImport } from './routes/_authed/_mainLayout/upload/confirmation'
import { Route as AuthedApplicationApplicationIdDocumentDocumentIDSplatRouteImport } from './routes/_authed/application/$applicationId/document/$documentID.$'

const SigninRoute = SigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedRoute = AuthedRouteImport.update({
  id: '/_authed',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedVerifyEmailRoute = AuthedVerifyEmailRouteImport.update({
  id: '/verify-email',
  path: '/verify-email',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedAcceptInvitationRoute = AuthedAcceptInvitationRouteImport.update({
  id: '/accept-invitation',
  path: '/accept-invitation',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedMainLayoutRoute = AuthedMainLayoutRouteImport.update({
  id: '/_mainLayout',
  getParentRoute: () => AuthedRoute,
} as any)
const AuthedMainLayoutDashboardRoute =
  AuthedMainLayoutDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthedMainLayoutRoute,
  } as any)
const AuthedMainLayoutUploadIndexRoute =
  AuthedMainLayoutUploadIndexRouteImport.update({
    id: '/upload/',
    path: '/upload/',
    getParentRoute: () => AuthedMainLayoutRoute,
  } as any)
const AuthedMainLayoutUploadSubmitRoute =
  AuthedMainLayoutUploadSubmitRouteImport.update({
    id: '/upload/submit',
    path: '/upload/submit',
    getParentRoute: () => AuthedMainLayoutRoute,
  } as any)
const AuthedMainLayoutUploadReviewRoute =
  AuthedMainLayoutUploadReviewRouteImport.update({
    id: '/upload/review',
    path: '/upload/review',
    getParentRoute: () => AuthedMainLayoutRoute,
  } as any)
const AuthedMainLayoutUploadConfirmationRoute =
  AuthedMainLayoutUploadConfirmationRouteImport.update({
    id: '/upload/confirmation',
    path: '/upload/confirmation',
    getParentRoute: () => AuthedMainLayoutRoute,
  } as any)
const AuthedApplicationApplicationIdDocumentDocumentIDSplatRoute =
  AuthedApplicationApplicationIdDocumentDocumentIDSplatRouteImport.update({
    id: '/application/$applicationId/document/$documentID/$',
    path: '/application/$applicationId/document/$documentID/$',
    getParentRoute: () => AuthedRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/accept-invitation': typeof AuthedAcceptInvitationRoute
  '/verify-email': typeof AuthedVerifyEmailRoute
  '/dashboard': typeof AuthedMainLayoutDashboardRoute
  '/upload/confirmation': typeof AuthedMainLayoutUploadConfirmationRoute
  '/upload/review': typeof AuthedMainLayoutUploadReviewRoute
  '/upload/submit': typeof AuthedMainLayoutUploadSubmitRoute
  '/upload': typeof AuthedMainLayoutUploadIndexRoute
  '/application/$applicationId/document/$documentID/$': typeof AuthedApplicationApplicationIdDocumentDocumentIDSplatRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signin': typeof SigninRoute
  '/accept-invitation': typeof AuthedAcceptInvitationRoute
  '/verify-email': typeof AuthedVerifyEmailRoute
  '/dashboard': typeof AuthedMainLayoutDashboardRoute
  '/upload/confirmation': typeof AuthedMainLayoutUploadConfirmationRoute
  '/upload/review': typeof AuthedMainLayoutUploadReviewRoute
  '/upload/submit': typeof AuthedMainLayoutUploadSubmitRoute
  '/upload': typeof AuthedMainLayoutUploadIndexRoute
  '/application/$applicationId/document/$documentID/$': typeof AuthedApplicationApplicationIdDocumentDocumentIDSplatRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authed': typeof AuthedRouteWithChildren
  '/signin': typeof SigninRoute
  '/_authed/_mainLayout': typeof AuthedMainLayoutRouteWithChildren
  '/_authed/accept-invitation': typeof AuthedAcceptInvitationRoute
  '/_authed/verify-email': typeof AuthedVerifyEmailRoute
  '/_authed/_mainLayout/dashboard': typeof AuthedMainLayoutDashboardRoute
  '/_authed/_mainLayout/upload/confirmation': typeof AuthedMainLayoutUploadConfirmationRoute
  '/_authed/_mainLayout/upload/review': typeof AuthedMainLayoutUploadReviewRoute
  '/_authed/_mainLayout/upload/submit': typeof AuthedMainLayoutUploadSubmitRoute
  '/_authed/_mainLayout/upload/': typeof AuthedMainLayoutUploadIndexRoute
  '/_authed/application/$applicationId/document/$documentID/$': typeof AuthedApplicationApplicationIdDocumentDocumentIDSplatRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/signin'
    | '/accept-invitation'
    | '/verify-email'
    | '/dashboard'
    | '/upload/confirmation'
    | '/upload/review'
    | '/upload/submit'
    | '/upload'
    | '/application/$applicationId/document/$documentID/$'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/signin'
    | '/accept-invitation'
    | '/verify-email'
    | '/dashboard'
    | '/upload/confirmation'
    | '/upload/review'
    | '/upload/submit'
    | '/upload'
    | '/application/$applicationId/document/$documentID/$'
  id:
    | '__root__'
    | '/'
    | '/_authed'
    | '/signin'
    | '/_authed/_mainLayout'
    | '/_authed/accept-invitation'
    | '/_authed/verify-email'
    | '/_authed/_mainLayout/dashboard'
    | '/_authed/_mainLayout/upload/confirmation'
    | '/_authed/_mainLayout/upload/review'
    | '/_authed/_mainLayout/upload/submit'
    | '/_authed/_mainLayout/upload/'
    | '/_authed/application/$applicationId/document/$documentID/$'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthedRoute: typeof AuthedRouteWithChildren
  SigninRoute: typeof SigninRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signin': {
      id: '/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof SigninRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed': {
      id: '/_authed'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/verify-email': {
      id: '/_authed/verify-email'
      path: '/verify-email'
      fullPath: '/verify-email'
      preLoaderRoute: typeof AuthedVerifyEmailRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/accept-invitation': {
      id: '/_authed/accept-invitation'
      path: '/accept-invitation'
      fullPath: '/accept-invitation'
      preLoaderRoute: typeof AuthedAcceptInvitationRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/_mainLayout': {
      id: '/_authed/_mainLayout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthedMainLayoutRouteImport
      parentRoute: typeof AuthedRoute
    }
    '/_authed/_mainLayout/dashboard': {
      id: '/_authed/_mainLayout/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthedMainLayoutDashboardRouteImport
      parentRoute: typeof AuthedMainLayoutRoute
    }
    '/_authed/_mainLayout/upload/': {
      id: '/_authed/_mainLayout/upload/'
      path: '/upload'
      fullPath: '/upload'
      preLoaderRoute: typeof AuthedMainLayoutUploadIndexRouteImport
      parentRoute: typeof AuthedMainLayoutRoute
    }
    '/_authed/_mainLayout/upload/submit': {
      id: '/_authed/_mainLayout/upload/submit'
      path: '/upload/submit'
      fullPath: '/upload/submit'
      preLoaderRoute: typeof AuthedMainLayoutUploadSubmitRouteImport
      parentRoute: typeof AuthedMainLayoutRoute
    }
    '/_authed/_mainLayout/upload/review': {
      id: '/_authed/_mainLayout/upload/review'
      path: '/upload/review'
      fullPath: '/upload/review'
      preLoaderRoute: typeof AuthedMainLayoutUploadReviewRouteImport
      parentRoute: typeof AuthedMainLayoutRoute
    }
    '/_authed/_mainLayout/upload/confirmation': {
      id: '/_authed/_mainLayout/upload/confirmation'
      path: '/upload/confirmation'
      fullPath: '/upload/confirmation'
      preLoaderRoute: typeof AuthedMainLayoutUploadConfirmationRouteImport
      parentRoute: typeof AuthedMainLayoutRoute
    }
    '/_authed/application/$applicationId/document/$documentID/$': {
      id: '/_authed/application/$applicationId/document/$documentID/$'
      path: '/application/$applicationId/document/$documentID/$'
      fullPath: '/application/$applicationId/document/$documentID/$'
      preLoaderRoute: typeof AuthedApplicationApplicationIdDocumentDocumentIDSplatRouteImport
      parentRoute: typeof AuthedRoute
    }
  }
}

interface AuthedMainLayoutRouteChildren {
  AuthedMainLayoutDashboardRoute: typeof AuthedMainLayoutDashboardRoute
  AuthedMainLayoutUploadConfirmationRoute: typeof AuthedMainLayoutUploadConfirmationRoute
  AuthedMainLayoutUploadReviewRoute: typeof AuthedMainLayoutUploadReviewRoute
  AuthedMainLayoutUploadSubmitRoute: typeof AuthedMainLayoutUploadSubmitRoute
  AuthedMainLayoutUploadIndexRoute: typeof AuthedMainLayoutUploadIndexRoute
}

const AuthedMainLayoutRouteChildren: AuthedMainLayoutRouteChildren = {
  AuthedMainLayoutDashboardRoute: AuthedMainLayoutDashboardRoute,
  AuthedMainLayoutUploadConfirmationRoute:
    AuthedMainLayoutUploadConfirmationRoute,
  AuthedMainLayoutUploadReviewRoute: AuthedMainLayoutUploadReviewRoute,
  AuthedMainLayoutUploadSubmitRoute: AuthedMainLayoutUploadSubmitRoute,
  AuthedMainLayoutUploadIndexRoute: AuthedMainLayoutUploadIndexRoute,
}

const AuthedMainLayoutRouteWithChildren =
  AuthedMainLayoutRoute._addFileChildren(AuthedMainLayoutRouteChildren)

interface AuthedRouteChildren {
  AuthedMainLayoutRoute: typeof AuthedMainLayoutRouteWithChildren
  AuthedAcceptInvitationRoute: typeof AuthedAcceptInvitationRoute
  AuthedVerifyEmailRoute: typeof AuthedVerifyEmailRoute
  AuthedApplicationApplicationIdDocumentDocumentIDSplatRoute: typeof AuthedApplicationApplicationIdDocumentDocumentIDSplatRoute
}

const AuthedRouteChildren: AuthedRouteChildren = {
  AuthedMainLayoutRoute: AuthedMainLayoutRouteWithChildren,
  AuthedAcceptInvitationRoute: AuthedAcceptInvitationRoute,
  AuthedVerifyEmailRoute: AuthedVerifyEmailRoute,
  AuthedApplicationApplicationIdDocumentDocumentIDSplatRoute:
    AuthedApplicationApplicationIdDocumentDocumentIDSplatRoute,
}

const AuthedRouteWithChildren =
  AuthedRoute._addFileChildren(AuthedRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthedRoute: AuthedRouteWithChildren,
  SigninRoute: SigninRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
